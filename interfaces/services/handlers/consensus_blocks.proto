syntax = "proto3";
package handlers;
option go_package = "github.com/orbs-network/orbs-spec/types/go/services/handlers";

import "../protocol/blocks.proto";

option serialize_messages = false;

service ConsensusBlocksHandler {
    rpc HandleBlockConsensus (HandleBlockConsensusInput) returns (HandleBlockConsensusOutput);
}

message HandleBlockConsensusInput {
    HandleBlockConsensusMode mode = 1;
    protocol.BlockType block_type = 2;
    protocol.BlockPairContainer block_pair = 3; // TODO: when separate services, do not forward transactions, receipts or state diff.
    protocol.BlockPairContainer prev_block_pair = 4; // TODO: when separate services, do not forward transactions, receipts or state diff.
}

// returns error code ERROR_CODE_INVALID if not valid
message HandleBlockConsensusOutput {
}

enum HandleBlockConsensusMode {
    HANDLE_BLOCK_CONSENSUS_MODE_RESERVED = 0;
    HANDLE_BLOCK_CONSENSUS_MODE_VERIFY_AND_UPDATE = 1;
    HANDLE_BLOCK_CONSENSUS_MODE_UPDATE_ONLY = 2;
    HANDLE_BLOCK_CONSENSUS_MODE_VERIFY_ONLY = 3;
    HANDLE_BLOCK_CONSENSUS_MODE_VERIFY_CHAIN_TIP = 4;
}
